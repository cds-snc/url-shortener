name: "Terraform drift check"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.3.7
  TERRAGRUNT_VERSION: 0.40.2
  TF_VAR_sentinel_customer_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
  TF_VAR_sentinel_shared_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform-drift:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - account_id: '843973686572'
            env: 'STAGING'
            terragrunt: 'staging'
          - account_id: '806721586252'
            env: 'PROD'
            terragrunt: 'production'
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@5727f247b64f324ec403ac56ae05e220fd02b65f # v2.1.0
        with:
          role-to-assume: arn:aws:iam::${{ matrix.account_id }}:role/url-shortener-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Get infrastructure version
        run: echo "INFRASTRUCTURE_VERSION=$(cat .github/manifests/infrastructure_version)" >> $GITHUB_ENV

      - name: Check for drift
        env:
          TF_VAR_auth_token_app: "${{ secrets[format('{0}_{1}', matrix.env, 'AUTH_TOKEN_APP')] }}"
          TF_VAR_auth_token_notify: "${{ secrets[format('{0}_{1}', matrix.env, 'AUTH_TOKEN_NOTIFY')] }}"
          TF_VAR_cloudfront_header: "${{ secrets[format('{0}_{1}', matrix.env, 'CLOUDFRONT_HEADER')] }}"
          TF_VAR_slack_webhook_url: "${{ secrets[format('{0}_{1}', 'SLACK_WEBHOOK_URL', matrix.env)] }}"
          TF_VAR_hashing_peppers: "${{ secrets[format('{0}_{1}', matrix.env, 'HASHING_PEPPERS')] }}"
          TF_VAR_login_token_salt: "${{ secrets[format('{0}_{1}', matrix.env, 'LOGIN_TOKEN_SALT')] }}"
          TF_VAR_notify_api_key: "${{ secrets[format('{0}_{1}', matrix.env, 'NOTIFY_API_KEY')] }}"
          TF_VAR_notify_contact_email: "${{ secrets[format('{0}_{1}', matrix.env, 'NOTIFY_CONTACT_EMAIL')] }}"
        working-directory: "./terragrunt/env/${{ matrix.terragrunt }}"
        run: |
          terragrunt run-all init
          terragrunt run-all plan -detailed-exitcode
