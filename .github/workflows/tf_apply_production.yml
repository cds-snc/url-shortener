name: "Terraform apply production"

on:
  push:
    branches:
      - main
    paths:
      - ".github/manifests/infrastructure_version"

env:
  TERRAFORM_VERSION: 1.3.7
  TERRAGRUNT_VERSION: 0.40.2
  AWS_REGION: ca-central-1
  TF_VAR_api_auth_token: ${{ secrets.PROD_API_AUTH_TOKEN }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
  TF_VAR_hashing_peppers: ${{ secrets.PROD_HASHING_PEPPERS }}
  TF_VAR_notify_api_key: ${{ secrets.PROD_NOTIFY_API_KEY }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Get infrastructure version
        run: echo "INFRASTRUCTURE_VERSION=$(cat .github/manifests/infrastructure_version)" >> $GITHUB_ENV

      - name: Checkout infrastructure version tag
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ env.INFRASTRUCTURE_VERSION }}

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          role-to-assume: arn:aws:iam::806721586252:role/url-shortener-apply
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Apply hosted_zone
        working-directory: terragrunt/env/production/hosted_zone
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply network
        working-directory: terragrunt/env/production/network
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply ecr
        working-directory: terragrunt/env/production/ecr
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply dynamodb
        working-directory: terragrunt/env/production/dynamodb
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply api
        working-directory: terragrunt/env/production/api
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply cloudfront
        working-directory: terragrunt/env/production/cloudfront
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply alarms
        working-directory: terragrunt/env/production/alarms
        run: terragrunt apply --terragrunt-non-interactive -auto-approve
