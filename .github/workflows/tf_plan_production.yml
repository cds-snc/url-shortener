name: "Terraform plan production"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/manifests/infrastructure_version"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.3.7
  TERRAGRUNT_VERSION: 0.40.2
  TF_VAR_auth_token_app: ${{ secrets.PROD_AUTH_TOKEN_APP }}
  TF_VAR_auth_token_notify: ${{ secrets.PROD_AUTH_TOKEN_NOTIFY }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
  TF_VAR_hashing_peppers: ${{ secrets.PROD_HASHING_PEPPERS }}
  TF_VAR_notify_api_key: ${{ secrets.PROD_NOTIFY_API_KEY }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: hosted_zone
          - module: network
          - module: ecr
          - module: dynamodb
          - module: api
          - module: cloudfront
          - module: alarms

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: Get infrastructure version
        run: echo "INFRASTRUCTURE_VERSION=$(cat .github/manifests/infrastructure_version)" >> $GITHUB_ENV

      - name: Checkout infrastructure version tag
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          ref: ${{ env.INFRASTRUCTURE_VERSION }}

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2.0.0
        with:
          role-to-assume: arn:aws:iam::806721586252:role/url-shortener-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@26fbdfea02203e8753541f3ca1378f392801d5d5 # v3.0.3
        with:
          comment-delete: true
          comment-title: "Production: ${{ matrix.module }}"
          directory: ./terragrunt/env/production/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
