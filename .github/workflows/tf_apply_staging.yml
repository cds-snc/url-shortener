name: "Terraform apply staging"

on:
  push:
    branches:
      - main
    paths:
      - "terragrunt/**"
      - "!terragrunt/env/production/**"
      - ".github/workflows/tf_apply_staging.yml"

env:
  TERRAFORM_VERSION: 1.3.7
  TERRAGRUNT_VERSION: 0.40.2
  AWS_REGION: ca-central-1
  TF_VAR_auth_token_app: ${{ secrets.STAGING_AUTH_TOKEN_APP }}
  TF_VAR_auth_token_notify: ${{ secrets.STAGING_AUTH_TOKEN_NOTIFY }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}
  TF_VAR_hashing_peppers: ${{ secrets.STAGING_HASHING_PEPPERS }}
  TF_VAR_notify_api_key: ${{ secrets.STAGING_NOTIFY_API_KEY }}
  TF_VAR_shortener_path_length: ${{ secrets.SHORTENER_PATH_LENGTH }}


permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          role-to-assume: arn:aws:iam::843973686572:role/url-shortener-apply
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Apply hosted_zone
        working-directory: terragrunt/env/staging/hosted_zone
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply network
        working-directory: terragrunt/env/staging/network
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply ecr
        working-directory: terragrunt/env/staging/ecr
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply dynamodb
        working-directory: terragrunt/env/staging/dynamodb
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply api
        working-directory: terragrunt/env/staging/api
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply cloudfront
        working-directory: terragrunt/env/staging/cloudfront
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply alarms
        working-directory: terragrunt/env/staging/alarms
        run: terragrunt apply --terragrunt-non-interactive -auto-approve
