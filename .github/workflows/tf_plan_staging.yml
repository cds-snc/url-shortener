name: "Terraform plan staging"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terragrunt/**"
      - "!terragrunt/env/production/**"
      - ".github/workflows/tf_plan_staging.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.3.7
  TERRAGRUNT_VERSION: 0.40.2
  TF_VAR_api_auth_token: ${{ secrets.STAGING_API_AUTH_TOKEN }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}
  TF_VAR_hashing_peppers: ${{ secrets.STAGING_HASHING_PEPPERS }}
  TF_VAR_notify_api_key: ${{ secrets.STAGING_NOTIFY_API_KEY }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: hosted_zone
          - module: network
          - module: ecr
          - module: dynamodb
          - module: api
          - module: cloudfront
          - module: alarms

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          role-to-assume: arn:aws:iam::843973686572:role/url-shortener-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@26fbdfea02203e8753541f3ca1378f392801d5d5 # v3.0.3
        with:
          comment-delete: true
          comment-title: "Staging: ${{ matrix.module }}"
          directory: ./terragrunt/env/staging/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
